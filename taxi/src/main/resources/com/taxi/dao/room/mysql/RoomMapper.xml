<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taxi.dao.room.RoomDao">    
	 <resultMap id="roomResultMap" type="Room">
	    <result 	column="ROOM_NO" 			property="roomNo"			/>
	    <result 	column="ROOM_START_TIME"	property="roomStartTime" 	/>
	    <result 	column="ROOM_MBR_NUM_LIMIT"	property="roomMbrNumLimit" 	/>
	    <result 	column="ROOM_REG_DATE"		property="roomRegDate" 		/>
	    <result 	column="ROOM_COLOR"			property="roomColor" 		/>
	    <result 	column="RELATION_CD"		property="relationCd" 		/>
	    <result 	column="RELATION_MBR"		property="relationMbr" 		/>
	    <result 	column="ROOM_MBR_COUNT"		property="roomMbrCount" 	/>
	    <collection column="ROOM_NO"			property="roomMbrList" 	javaType="java.util.ArrayList" 	ofType="RoomMbr"
	        select="com.taxi.dao.room.RoomMbrDao.getRoomMbrDetailList"/>
	    <collection column="ROOM_NO"			property="roomPathList"	javaType="java.util.ArrayList" 	ofType="RoomPath"
	        select="com.taxi.dao.room.RoomPathDao.getRoomPathList"/>
	</resultMap>    
	 
	<!-- 
		* 설  명: 방 목록 조회
		* 작성자: 김상헌
	 -->
	<select id="getRoomList" parameterType="map" resultMap="roomResultMap">
		select 
				A.ROOM_NO
			, 	A.ROOM_START_TIME
			, 	A.ROOM_MBR_NUM_LIMIT
			, 	A.ROOM_REG_DATE
			, 	A.ROOM_COLOR
			, 	A.RELATION_MBR	-- 관계있는 방멤버 번호
			, 	A.RELATION_CD	-- 관계코드(1: 친구 관계인 방, 2: 친구의친구 관계인 방, 99: 관계 없는 방)
		from 	( 	-- 친구가 있는 방 조회
					select 	
							A.ROOM_NO
						, 	A.ROOM_START_TIME
						, 	A.ROOM_MBR_NUM_LIMIT
						, 	A.ROOM_REG_DATE
						, 	A.ROOM_COLOR
						, 	C.MBR_NO 	as RELATION_MBR
						, 	1 			as RELATION_CD
					from 	( 	-- 방 조회
								select
										A.ROOM_NO, A.ROOM_START_TIME, A.ROOM_MBR_NUM_LIMIT, A.ROOM_REG_DATE, A.ROOM_COLOR
								from
										ROOM A
									, 	ROOM_PATH X1
									, 	ROOM_PATH X2
								where   
										1 = 1
								and     A.ROOM_START_TIME > now() 	-- 출발시간 조건
								AND 	A.ROOM_NO = X1.ROOM_NO
								AND 	A.ROOM_NO = X2.ROOM_NO
								and 	X1.PATH_RANK = 0			-- 출발지 조건
								and 	sqrt(pow( #{startLat} - X1.PATH_LAT, 2) + pow( #{startLng} - X1.PATH_LNG, 2)) &lt;=  #{startRange}
								AND 	X2.PATH_RANK = 99			-- 목적지 조건
								and     sqrt(pow( #{endLat} - X2.PATH_LAT, 2) + pow( #{endLng} - X2.PATH_LNG, 2)) &lt;=  #{endRange}
							) A
						, 	ROOM_MBR B
						, 	MBR C
					where 
							1 = 1
					and 	A.ROOM_NO 		= B.ROOM_NO
					and 	B.MBR_NO 		= C.MBR_NO
					and 	C.MBR_PHONE_NO 	in (	select 	FRND_PHONE_NO
													from 	FRND 
													where 	MBR_NO = #{mbrNo} )
					
					union all
		
					-- 친구의 친구가 있는 방 조회
					select 	
							A.ROOM_NO
						, 	A.ROOM_START_TIME
						, 	A.ROOM_MBR_NUM_LIMIT
						, 	A.ROOM_REG_DATE
						, 	A.ROOM_COLOR
						, 	C.MBR_NO 	as RELATION_MBR
						, 	2 			as RELATION_CD
					from 	( 	-- 방 조회
								select
										A.ROOM_NO, A.ROOM_START_TIME, A.ROOM_MBR_NUM_LIMIT, A.ROOM_REG_DATE, A.ROOM_COLOR
								from
										ROOM A
									, 	ROOM_PATH X1
									, 	ROOM_PATH X2
								where   
										1 = 1
								and     A.ROOM_START_TIME > now() 	-- 출발시간 조건
								AND 	A.ROOM_NO = X1.ROOM_NO
								AND 	A.ROOM_NO = X2.ROOM_NO
								and 	X1.PATH_RANK = 0			-- 출발지 조건
								and 	sqrt(pow( #{startLat} - X1.PATH_LAT, 2) + pow( #{startLng} - X1.PATH_LNG, 2)) &lt;=  #{startRange}
								AND 	X2.PATH_RANK = 99			-- 목적지 조건
								and     sqrt(pow( #{endLat} - X2.PATH_LAT, 2) + pow( #{endLng} - X2.PATH_LNG, 2)) &lt;=  #{endRange}
							) A
						, 	ROOM_MBR B
						, 	MBR C
						,	FRND D
					where 
							1 = 1
					and 	A.ROOM_NO 		= B.ROOM_NO
					and 	B.MBR_NO 		= C.MBR_NO
					and 	C.MBR_NO 		= D.MBR_NO
					and		D.FRND_PHONE_NO in (	select	FRND_PHONE_NO
													from	FRND
													where 	MBR_NO = #{mbrNo} )
		
					union all
					
					-- 관계 없는 방 조회
					select 
								A.ROOM_NO
							, 	A.ROOM_START_TIME
							, 	A.ROOM_MBR_NUM_LIMIT
							, 	A.ROOM_REG_DATE
							, 	A.ROOM_COLOR
							, 	NULL 	 	as RELATION_MBR
							, 	99 			as RELATION_CD
					from
							ROOM A
						, 	ROOM_PATH X1
						, 	ROOM_PATH X2
					where   
							1 = 1
					and     A.ROOM_START_TIME > now() 	-- 출발시간 조건
					AND 	A.ROOM_NO = X1.ROOM_NO
					AND 	A.ROOM_NO = X2.ROOM_NO
					and 	X1.PATH_RANK = 0			-- 출발지 조건
					and 	sqrt(pow( #{startLat} - X1.PATH_LAT, 2) + pow( #{startLng} - X1.PATH_LNG, 2)) &lt;=  #{startRange}
					AND 	X2.PATH_RANK = 99			-- 목적지 조건
					and     sqrt(pow( #{endLat} - X2.PATH_LAT, 2) + pow( #{endLng} - X2.PATH_LNG, 2)) &lt;=  #{endRange}
				) A
		
		group by 
				A.ROOM_NO, A.ROOM_START_TIME, A.ROOM_MBR_NUM_LIMIT, A.ROOM_REG_DATE, A.ROOM_COLOR
		having
				A.ROOM_MBR_NUM_LIMIT &gt; (select count(X.MBR_NO) from ROOM_MBR X 
										where X.ROOM_NO = A.ROOM_NO )
		<if test="roomNoList.size() > 0">
		and 	A.ROOM_NO not in 
			<foreach collection="roomNoList" item="roomNo" open="(" separator="," close=")">
			    #{roomNo}
			</foreach>
		</if>
		order by 
				A.RELATION_CD, A.ROOM_START_TIME
		limit 	0, 8
	</select>
	
	
	<!-- 
		 *  설  명: 방 정보 조회
		 *  작성자: 김상헌
	 -->
	 <select id="getRoomInfo" parameterType="int" resultMap="roomResultMap">
		select
				A.ROOM_NO
		    , 	A.ROOM_START_TIME
		    , 	A.ROOM_MBR_NUM_LIMIT
		    , 	A.ROOM_REG_DATE
		    ,	A.ROOM_COLOR
		    ,	count( B.MBR_NO ) as ROOM_MBR_COUNT
		from
				ROOM A
			, 	ROOM_MBR B
		where  	1 = 1
		and	    A.ROOM_NO = B.ROOM_NO
		and		A.ROOM_NO = #{value}
		group by
				A.ROOM_NO, A.ROOM_START_TIME, A.ROOM_MBR_NUM_LIMIT, A.ROOM_REG_DATE, A.ROOM_COLOR
		limit 1
	</select>
	
	
	<!--
		* 설  명: 참여하고 있는 방 조회
		* 작성자: 김상헌
	-->
	<select id="hasRoom" parameterType="int" resultMap="roomResultMap">
		select 	
				A.ROOM_NO
		    , 	A.ROOM_START_TIME
		    , 	A.ROOM_MBR_NUM_LIMIT
		    , 	A.ROOM_REG_DATE
		    ,	A.ROOM_COLOR
		    ,	count( B.MBR_NO ) as ROOM_MBR_COUNT
		from 	
				ROOM A
			, 	ROOM_MBR B
		where 	
				1 = 1
		and	    A.ROOM_NO = B.ROOM_NO
        and     A.ROOM_START_TIME > now()
		and 	B.MBR_NO = #{value}
		group by
				A.ROOM_NO, A.ROOM_START_TIME, A.ROOM_MBR_NUM_LIMIT, A.ROOM_REG_DATE, A.ROOM_COLOR
		limit 1
	</select>
    

	<!-- 
		*  설  명: 방 추가
		*  작성자: 김상헌
	-->
	<insert id="addRoom" parameterType="Room">
		insert into ROOM 
			( ROOM_START_TIME, ROOM_MBR_NUM_LIMIT, ROOM_REG_DATE, ROOM_COLOR )
		values  
			( #{roomStartTime}, #{roomMbrNumLimit}, now(), #{roomColor})
		<selectKey resultType="int" keyProperty="roomNo">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	
	<!-- 
		* 설  명: 방 삭제
		* 작성자: 김상헌
	 -->
	<delete id="deleteRoom" parameterType="map">
		delete from 
				ROOM
		where	1 = 1
		<if test="roomNo != null and roomNo != 0">
			and ROOM_NO  = #{roomNo}    
		</if>
		<if test="room != null">
			and ROOM_NO in
			<foreach collection="room" item="item" separator="," open=" (" close=")">
							#{item.roomNo}
			</foreach>
		</if>
	</delete>
	
	
	 <!-- 
	 	*설  명: 지난 방 목록 가져오기
	 	*작성자: 장종혁
	  -->
	 <select id="getPastRoomList" resultType="Room">
	<![CDATA[
		select 		ROOM_NO as roomNo
		from  		ROOM
		where
	          		ROOM_START_TIME  <  DATE_SUB(DATE(NOW()), INTERVAL 1 DAY)
	]]>
	</select>	

		 
	<!-- 
		 * 설  명: 방 출발 전 알림 대상 방 리스트 조회
		 * 작성자: 김상헌
	-->
	<resultMap id="alramGcmTargetRoomResultMap" type="Room">
	    <result 	property="roomNo" 			column="room_no"/>
	    <result 	property="roomStartTime" 	column="room_start_time"/>
	    <result 	property="differenceTime" 	column="differenceTime"/>
	    <collection property="roomMbrList" 		column="room_no" 	javaType="java.util.ArrayList" 	ofType="RoomMbr"
	        select="com.taxi.dao.room.RoomMbrDao.getAlramGcmTargetRoomMbrList"/>
	</resultMap>
	<select id="getAlramGcmTargetRoomList" parameterType="string" resultMap="alramGcmTargetRoomResultMap">
         SELECT   room_no
				, room_start_time
				, TIMESTAMPDIFF(MINUTE,now(), room_start_time) as differenceTime
		  FROM 	ROOM
		 WHERE
				1=1
		   AND
		  		room_start_time between now() and addtime(now(), #{value})
    </select>
	
 
</mapper>


