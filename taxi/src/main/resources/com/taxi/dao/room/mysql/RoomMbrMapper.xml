<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taxi.dao.room.RoomMbrDao">

    <!-- 
		 * 설  명: 방 회원 리스트 조회
		 * 작성자: 김상헌 
	 -->
	<select id="getRoomMbrDetailList" parameterType="int" resultType="RoomMbr">
	    select
	              c.ROOM_NO 			as roomNo  
	            , c.MBR_NO				as mbrNo 
	            , c.MBR_NAME 			as mbrName
                , c.MBR_PHONE_NO		as mbrPhoneNo
                , c.MBR_PHOTO_URL 		as mbrPhotoUrl
                , c.GCM_REG_ID			as gcmRegId 
	            , c.ROOM_MBR_NO 		as roomMbrNo 
	            , c.ROOM_MBR_NAME 		as roomMbrName
	            , c.ROOM_MBR_ST         as roomMbrSt
	            , c.REL_FRND_PHONE_NO 	as relFrndPhoneNo
	            , d.REL_FRND_NAME  		as relFrndName
	            , c.MUTUAL_YN 			as mutualYn
			  	, c.ROOM_MBR_RANK 		as roomMbrRank 
	     from (
		        select
					     a.ROOM_NO
					,    a.MBR_NO
					,    a.MBR_NAME
					,    a.MBR_PHONE_NO
	                ,    a.MBR_PHOTO_URL
	                ,    a.GCM_REG_ID
					,    b.ROOM_MBR_NO
					,    b.ROOM_MBR_NAME
					,    a.ROOM_MBR_ST
					,    a.REL_FRND_PHONE_NO
					, 	 a.MUTUAL_YN
					,    a.ROOM_MBR_RANK
		              from  (
		              		 -- 참여회원 정보
		                     select
		                            a.ROOM_NO,
		                            a.MBR_NO,
		                            b.MBR_NAME,
		                            b.MBR_PHONE_NO,
	                                b.MBR_PHOTO_URL,
	                                a.GCM_REG_ID,
		                            a.ROOM_MBR_NO,
		                            a.ROOM_MBR_ST,
		                            a.REL_FRND_PHONE_NO,
		                            a.MUTUAL_YN,
		                            a.ROOM_MBR_RANK
		                       from
		                            ROOM_MBR a
		                          , MBR b
		                      where 1 = 1
								and a.MBR_NO = b.MBR_NO
								and a.ROOM_NO = #{value}
		                   ) a
						left outer join
		                   (
		                   	 -- 알고 들어가게된 사람정보
		                     select
									a.room_no,
		                        	a.ROOM_MBR_NO,
		                        	b.MBR_NAME AS  ROOM_MBR_NAME,
	                                a.GCM_REG_ID
		                       from
		                            ROOM_MBR a
		                          , MBR b
		                      where 1 = 1
		                      	and a.ROOM_MBR_NO = b.MBR_NO
								and a.ROOM_NO = #{value}
		                    group by 
		                    		a.room_MBR_NO
		                   ) b
		               on a.ROOM_MBR_NO = b.ROOM_MBR_NO
				) c
			left outer join
                (
                	 -- 연결 친구 정보
	                 select
	                        a.ROOM_NO,
	                        a.MBR_NO,
	                        b.FRND_NAME,
	                        b.FRND_PHONE_NO,
	                        a.REL_FRND_NAME
	                   from
	                        ROOM_MBR a
	                      , FRND b
	                  where 1 = 1
	                  	and a.MBR_NO = B.MBR_NO
						and a.REL_FRND_PHONE_NO = b.FRND_PHONE_NO
						and a.ROOM_NO = #{value}
					group by  
							a.MBR_NO
				) d
			 on c.ROOM_NO = d.ROOM_NO
			and c.MBR_NO = d.MBR_NO
		  where 1 = 1
			and c.ROOM_NO =  #{value}
	    order by 
	    	c.ROOM_MBR_RANK
	</select>
	
	
	<!-- 
		 * 설  명: 방 나가기
		 * 작성자: 김상헌 	
	-->
	<delete id="outRoom" parameterType="map">
		 delete from ROOM_MBR
		<where>
				<if test="mbrNo != null">
					MBR_NO = #{mbrNo}
				</if>

				<if test="roomNo != null and roomNo != 0">
					and ROOM_NO = #{roomNo}
				</if>
				
				<if test="room != null">
					and ROOM_NO in
					<foreach collection="room" item="item" separator="," open=" (" close=")">
						#{item.roomNo}
					</foreach>
				</if>
		</where>
	</delete>
	
	
	<!-- 
		 * 설  명: 방 멤버 삭제
		 * 작성자: 김상헌
	-->
	<delete id="deleteRoomMbr" parameterType="int">
        delete from ROOM_MBR
        where 	1 = 1
        	and	MBR_NO = #{value}
    </delete>
    

	<!-- 
		 * 설  명: 방 멤버 추가
		 * 작성자: 김상헌 	
	-->
	<insert id="addRoomMbr" parameterType="RoomMbr">
        insert into ROOM_MBR
        	( ROOM_NO, MBR_NO, GCM_REG_ID
        	, ROOM_MBR_NO, ROOM_MBR_ST
        	, REL_FRND_PHONE_NO, REL_FRND_NAME
        	, MUTUAL_YN, ROOM_MBR_RANK)
        values
        	( #{roomNo}, #{mbrNo}, #{gcmRegId}
        	, #{roomMbrNo}, #{roomMbrSt}
        	, #{relFrndPhoneNo}, #{relFrndName}
        	, #{mutualYn}, #{roomMbrRank} )
    </insert>
    
	<!-- 
		*설  명:방내 회원수 조회
		*작성자:장종혁
	 -->
	<select id="roomMemberCount" parameterType="int" resultType="int">
	    SELECT
	    	 count(*)
	    FROM 
	    	ROOM_MBR
	    WHERE
	    	 ROOM_NO=#{value}
	</select>
	
	<!-- 
		 * 설  명: 해당회원이 방에 참여한것을 가정한 정보 
		 * 작성자: 김상헌 
	-->	
	<select id="getVirtualRoomMbr" parameterType="roomMbr" resultType="roomMbr">
	    -- 내 친구 관계
		select  #{roomNo}   		as roomNo
		    ,   #{mbrNo}  			as mbrNo
			,	#{gcmRegId} 		as gcmRegId
		    ,   X1.MBR_NO   		as roomMbrNo
			,   '1' 		        as roomMbrSt
            ,   null 				as relFrndPhoneNo
            ,   null 				as relFrndName
            ,   'Y'  				as mutualYn
		    ,	(select max(ROOM_MBR_RANK) + 1 from ROOM_MBR where ROOM_NO = X1.ROOM_NO) as roomMbrRank
		from
				ROOM_MBR X1
			, 	MBR X2
		where   1 = 1
			and X1.MBR_NO = X2.MBR_NO
		    and X1.ROOM_NO = #{roomNo}
		    and X2.MBR_PHONE_NO in (
			                            select  Y.FRND_PHONE_NO
			                            from    FRND Y
			                            where   1 = 1
			                                and Y.MBR_NO = #{mbrNo}
			                        )

		union all

		-- 내 친구의 친구 관계
		select  #{roomNo}   		as roomNo
		    ,   #{mbrNo}  			as mbrNo
		    ,	#{gcmRegId} 		as gcmRegId
		    ,   X1.MBR_NO   		as roomMbrNo
		    ,   '1' 		        as roomMbrSt
            ,   X2.FRND_PHONE_NO 	as relFrndPhoneNo
            ,   X2.FRND_NAME 		as relFrndName
            ,   'Y'  				as mutualYn
		    ,	(select max(ROOM_MBR_RANK) + 1 from ROOM_MBR where ROOM_NO = X1.ROOM_NO) as roomMbrRank

		from
				ROOM_MBR X1
		    ,   FRND X2
		where   X1.MBR_NO = X2.MBR_NO
		    and X1.ROOM_NO = #{roomNo}
		    and X2.FRND_PHONE_NO in (
			                            select  Y.FRND_PHONE_NO
			                            from    FRND Y
			                            where   1 = 1
			                                and Y.MBR_NO = #{mbrNo}
			                        )
		limit 1
	</select>
    
	

		<!-- 
		 * 설  명: 방 멤버 삭제(방 삭제시)
		 * 작성자: 장종혁
	-->
	<delete id="deleteRoomMbr2" parameterType="int">
        delete from ROOM_MBR
        where 	1 = 1
        	and	ROOM_NO = #{value}
    </delete>
    
	
	
<!-- //====================== AS-IS =======================// -->
<!-- 
    <select id="getRoomMbrCount" parameterType="int" resultType="int">
		SELECT
				count(*) AS roomMbrCount
		FROM
				ROOM_MBR
		WHERE
				1 = 1
		    AND room_no = #{roomNo}
	</select>



	<delete id="deleteRoomMbr" parameterType="String">
        delete from ROOM_MBR
        where 	1 = 1
        	and	MBR_ID = #{value}
    </delete>
    
	<select id="getRoomMbrInfo" parameterType="RoomMbr" resultType="RoomMbr">
		SELECT	a.ROOM_NO 		as roomNo
            , 	a.MBR_ID 		as mbrId
            ,	a.GCM_REG_ID	as gcmRegId
            , 	b.MBR_NAME 		as mbrName
            , 	b.MBR_PHONE_NO 	as mbrPhoneNo
            , 	b.MBR_PHOTO_URL as mbrPhotoUrl
            , 	a.ROOM_MBR_ID 	as roomMbrId
            , 	a.FRND_REL_ID 	as frndRelId
            ,	a.ROOM_MBR_RANK	as roomMbrRank
		FROM
				ROOM_MBR a
			,	MBR b
		WHERE	1 = 1
			AND	a.MBR_ID = b.MBR_ID
			AND	a.ROOM_NO = #{roomNo}
			AND	a.MBR_ID = #{mbrId}
	</select> 



	<delete id="outRoom" parameterType="map">
		 delete from ROOM_MBR
		<where>
				<if test="mbrId != null">
					MBR_ID = #{mbrId}
				</if>

				<if test="roomNo != null and roomNo != 0">
					and ROOM_NO = #{roomNo}
				</if>
				
				<if test="room != null">
					and ROOM_NO in
					<foreach collection="room" item="item" separator="," open=" (" close=")">
						#{item.roomNo}
					</foreach>
				</if>
		</where>
	</delete>

    <resultMap type="Map" id="getGcmTargetMapListResultMap">
        <result property="roomNo" 		column="roomNo"			javaType="String"/>
        <result property="mbrId" 		column="mbrId"			javaType="String"/>
        <result property="gcmRegId" 	column="gcmRegId"		javaType="String"/>
        <result property="mbrName" 		column="mbrName"		javaType="String"/>
        <result property="mbrPhoneNo" 	column="mbrPhoneNo"		javaType="String"/>
        <result property="mbrPhotoUrl" 	column="mbrPhotoUrl"	javaType="String"/>
        <result property="roomMbrId" 	column="roomMbrId"		javaType="String"/>
        <result property="frndRelId" 	column="frndRelId"		javaType="String"/>
        <result property="roomMbrRank" 	column="roomMbrRank"	javaType="String"/>
    </resultMap>
	<select id="getGcmTargetMapList" parameterType="map" resultMap="getGcmTargetMapListResultMap">
		SELECT	a.ROOM_NO 		as roomNo
            , 	a.MBR_ID 		as mbrId
            ,	a.GCM_REG_ID	as gcmRegId
            , 	b.MBR_NAME 		as mbrName
            , 	b.MBR_PHONE_NO 	as mbrPhoneNo
            , 	b.MBR_PHOTO_URL as mbrPhotoUrl
            , 	a.ROOM_MBR_ID 	as roomMbrId
            , 	a.FRND_REL_ID 	as frndRelId
            ,	a.ROOM_MBR_RANK	as roomMbrRank
		FROM
				ROOM_MBR a
			,	MBR b
		WHERE	1 = 1
			AND	a.MBR_ID = b.MBR_ID
			AND	a.ROOM_NO = #{roomNo}
		    AND a.MBR_ID NOT LIKE #{mbrId}
	</select>
	
	<select id="getAlramGcmTargetRoomMbrList" parameterType="int" resultType="RoomMbr">
		SELECT	a.ROOM_NO 		as roomNo
            ,	a.GCM_REG_ID	as gcmRegId
		FROM
				ROOM_MBR a
		WHERE	1 = 1
		<choose>
		    <when test="value != null and value != 0">
			AND	a.ROOM_NO = #{value}
			</when>
			<otherwise>
			AND 1 = 0
			</otherwise>
		</choose>
	</select>
 -->
	
</mapper>
