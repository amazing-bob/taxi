<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taxi.dao.room.RoomDao">    
	 <resultMap id="roomResultMap" type="Room">
	    <result 	property="roomNo" 			column="room_no"/>
	    <result 	property="roomStartTime" 	column="room_start_time"/>
	    <result 	property="roomMbrNumLimit" 	column="room_mbr_num_limit"/>
	    <result 	property="roomRegDate" 		column="room_reg_date"/>
	    <result 	property="roomMbrCount" 	column="roomMbrCount"/>
	    <collection property="roomPathList" 	column="room_no" 	javaType="java.util.ArrayList" 	ofType="RoomPath"
	        select="com.taxi.dao.room.RoomPathDao.getRoomPathList"/>
	    <collection property="roomMbrList" 		column="room_no" 	javaType="java.util.ArrayList" 	ofType="RoomMbr"
	        select="com.taxi.dao.room.RoomMbrDao.getRoomMbrDetailList"/>
	</resultMap>    
	
	 <!-- 
		 *  설  명: 참여하고 있는 방 조회
		 *  작성자: 김상헌
	 -->
	 <select id="getRoomInfo" parameterType="int" resultType="Room">
		select
				ROOM_NO 		as roomNo
			,	ROOM_START_TIME as roomStartTime
			,	ROOM_REG_DATE 	as roomRegDate
		from
				ROOM
		where  	1 = 1
			and	ROOM_NO = #{value}
	</select>
	
	
	<!-- 
		* 설  명: 방 목록 조회
		* 작성자: 김상헌
	 -->
	<select id="getRoomList" parameterType="map" resultMap="roomResultMap">
	    <![CDATA[
		select
				A.ROOM_NO
		    , 	A.ROOM_START_TIME
		    , 	A.ROOM_MBR_NUM_LIMIT
		    , 	A.ROOM_REG_DATE
		    ,	count( B.MBR_NO ) as roomMbrCount
		from
				ROOM A
			, 	ROOM_MBR B
		where   
                1 = 1
		and	    A.ROOM_NO = B.ROOM_NO
        and     A.ROOM_START_TIME > now()
        and     A.ROOM_NO in (
		    					-- 출발지 & 목적지 조건
		    					select
		    							X1.ROOM_NO
		    					from
		    							(
					                        select
					                                X1.ROOM_NO
					                        from
					                                ROOM_PATH X1
					                        where
					                                1 = 1
					                            and X1.PATH_RANK = 0
					                            and sqrt(pow(#{startLat} - X1.PATH_LAT, 2) + pow(#{startLng} - X1.PATH_LNG, 2)) <= #{startRange}
		    							) X1,
		    							(
				                            select
					                                X2.ROOM_NO
					                        from
					                                ROOM_PATH X2
					                        where
					                                1 = 1
                                            and     X2.PATH_RANK = 99
                                            and     sqrt(pow(#{endLat} - X2.PATH_LAT, 2) + pow(#{endLng} - X2.PATH_LNG, 2)) <= #{endRange}
		    							) X2
    							where
    									1 = 1
								and	    X1.ROOM_NO = X2.ROOM_NO
							)
	    and     A.ROOM_NO in (
	                            -- 친구 관계 조건
	    		                select  ROOM_NO
	    		                from
	    		                        ROOM_MBR X
	    		                    ,   MBR Y
	                                ,   FRND Z
	    		                where   
	                                    1 = 1
	    	                    and     Y.MBR_PHONE_NO = Z.FRND_PHONE_NO
	                            and     Y.MBR_NO = X.MBR_NO
	                            and     Z.MBR_NO =  #{mbrNo}
	
	    		                union all
	                            
	                            -- 친구의 친구 관계 조건
	    		                select  ROOM_NO
	    		                from
	    		                        ROOM_MBR X
	    		                    ,   FRND Y
	    		                    ,   FRND Z
	    		                where   
	                                    1 = 1
	                            and     Y.FRND_PHONE_NO = Z.FRND_PHONE_NO
	                            and     Y.MBR_NO = X.MBR_NO
	                            and     Z.MBR_NO =  #{mbrNo}			                
			                )
		group by
				A.ROOM_NO, A.ROOM_START_TIME, A.ROOM_MBR_NUM_LIMIT, A.ROOM_REG_DATE
		having
				count( B.MBR_NO ) < A.ROOM_MBR_NUM_LIMIT
		order by
				A.ROOM_START_TIME
 		]]>
	</select>
	
	
	<!--
		* 설  명: 참여하고 있는 방 조회
		* 작성자: 김상헌
	-->
	<select id="hasRooom" parameterType="int" resultMap="roomResultMap">
		select 	
				A.ROOM_NO
		    , 	A.ROOM_START_TIME
		    , 	A.ROOM_MBR_NUM_LIMIT
		    , 	A.ROOM_REG_DATE
		    ,	count( B.MBR_NO ) as roomMbrCount
		from 	
				ROOM A
			, 	ROOM_MBR B
		where 	
				1 = 1
		and	    A.ROOM_NO = B.ROOM_NO
        and     A.ROOM_START_TIME > now()
		and 	B.MBR_NO = #{value}
		group by
				A.ROOM_NO, A.ROOM_START_TIME, A.ROOM_MBR_NUM_LIMIT, A.ROOM_REG_DATE
	</select>
    

	<!-- 
		*  설  명: 방 추가
		*  작성자: 김상헌
	-->
	<insert id="addRoom" parameterType="Room">
		insert into ROOM 
			( ROOM_START_TIME, ROOM_MBR_NUM_LIMIT, ROOM_REG_DATE )
		values  
			( #{roomStartTime}, #{roomMbrNumLimit}, now())
		<selectKey resultType="int" keyProperty="roomNo">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 
		* 설  명:방삭제
		* 작성자:장종혁
	 -->
	 <delete id="deleteRoom" parameterType="int">
	     DELETE 
	     	FROM 
	     				ROOM
	      WHERE
	      				ROOM_NO=#{value}
	 </delete>
	 
	 
<!-- //====================== AS-IS =======================// -->
<!-- 




	<select id="getRoomInfo" parameterType="int" resultType="Room">
		select
				ROOM_NO 		as roomNo
			,	ROOM_START_TIME as roomStartTime
			,	ROOM_DISTANCE 	as roomDistance
			,	ROOM_FARE 		as roomFare
			,	ROOM_REG_DATE 	as roomRegDate
		from
				ROOM
		where  	1 = 1
			and	ROOM_NO = #{value}
	</select>

	<select id="getMyRoom" parameterType="string" resultMap="roomResultMap">
		select
				a.room_no
			,	a.room_start_time
		    ,   a.room_distance
	        ,	a.room_fare
	        ,	a.room_reg_date
	        ,	(select count(x.mbr_id) from ROOM_MBR x
		            where x.room_no = a.room_no)     AS roomMbrCount
		from
				ROOM a, ROOM_MBR b
		where  	1 = 1
			and	a.ROOM_NO = b.ROOM_NO
			and a.ROOM_START_TIME > now()
			and	b.MBR_ID = #{value}
		order by
				a.ROOM_START_TIME
		limit 1
	</select>
	
	
	<resultMap id="alramGcmTargetRoomResultMap" type="Room">
	    <result 	property="roomNo" 			column="room_no"/>
	    <result 	property="roomStartTime" 	column="room_start_time"/>
	    <result 	property="differenceTime" 	column="differenceTime"/>
	    <collection property="roomMbrList" 		column="room_no" 	javaType="java.util.ArrayList" 	ofType="RoomMbr"
	        select="com.taxi.dao.room.RoomMbrDao.getAlramGcmTargetRoomMbrList"/>
	</resultMap>
	
	<select id="getAlramGcmTargetRoomList" parameterType="string" resultMap="alramGcmTargetRoomResultMap">
         SELECT   room_no
				, room_start_time
				, MINUTE(SUBTIME(room_start_time, now())) as differenceTime
		  FROM 	ROOM
		 WHERE
				1=1
		   AND
		  		room_start_time between now() and addtime(now(), #{value})
    </select>
    
	
	<select id="getLastedRoomList" resultType="Room">
	<![CDATA[
		select 		ROOM_NO as roomNo
		from  		ROOM
		where
	          		ROOM_START_TIME  <  DATE_SUB(DATE(NOW()), INTERVAL 1 DAY)
	]]>
	</select>	
    
	
	<delete id="deleteRoom" parameterType="map">
		 delete from ROOM
		<where>
		    <trim prefixOverrides="AND|OR">
				<if test="room != null">
					and ROOM_NO in
					<foreach collection="room" item="item" separator="," open=" (" close=")">
						#{item.roomNo}
					</foreach>
				</if>
			</trim>
		</where>
	</delete>
 -->
 
</mapper>


